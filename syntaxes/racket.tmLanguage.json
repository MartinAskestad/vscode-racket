{
    "fileTypes": [
        ".rkt"
    ],
    "name": "Racket",
    "scopeName": "source.racket",
    "patterns": [
        {
            "include": "#sexp"
        },
        {
            "include": "#atom"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#quote"
        },
        {
            "include": "#quasiquote"
        }
    ],
    "repository": {
        "quasiquoted-sexp": {
            "begin": "(?<![,@])(\\(|\\[)",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.expression.begin.racket"
                }
            },
            "end": "(\\)|\\])",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.expression.end.racket"
                }
            },
            "name": "meta.sexp.quasiquoted.racket",
            "patterns": [
                {
                    "include": "#unquote"
                },
                {
                    "include": "#quasiquoted-sexp"
                },
                {
                    "include": "#symbol"
                },
                {
                    "include": "#comment"
                },
                {
                    "name": "invalid",
                    "match": ",@?"
                }
            ]
        },
        "quoted-sexp": {
            "name": "meta.expression.quoted.racket",
            "begin": "\\(|\\[",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.expression.begin.racket"
                }
            },
            "end": "\\)|\\]",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.expression.end.racket"
                }
            },
            "patterns": [
                {
                    "include": "#quoted-sexp"
                },
                {
                    "include": "#symbol"
                },
                {
                    "include": "#comment"
                },
                {
                    "name": "invalid",
                    "match": ",@?"
                }
            ]
        },
        "sexp": {
            "patterns": [
                {
                    "include": "#special-forms"
                },
                {
                    "include": "#normal-forms"
                },
                {
                    "name": "invalid",
                    "match": ",@?"
                }
            ]
        },
        "normal-forms": {
            "name": "meta.expression.racket",
            "begin": "\\(|\\[",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.expression.begin.racket"
                }
            },
            "end": "\\)|\\]",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.expression.end.racket"
                }
            },
            "patterns": [
                {
                    "include": "#quote"
                },
                {
                    "include": "#quasiquote"
                },
                {
                    "include": "#language-function"
                },
                {
                    "include": "#function-call"
                },
                {
                    "include": "#sexp"
                },
                {
                    "include": "#atom"
                },
                {
                    "include": "#comment"
                }
            ]
        },
        "declaring-pattern": {
            "patterns": [
                {
                    "begin": "(\\()\\s*(?=\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.section.expression.begin.racket"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.expression.end.racket"
                        }
                    },
                    "patterns": [
                        {
                            "begin": "(\\[)\\s*([^\\s\\{\\}\\(\\)\\[\\]#\\|,\"]+)",
                            "beginCaptures": {
                                "1": {
                                    "name": "punctuation.section.expression.begin.racket"
                                },
                                "2": {
                                    "name": "variable.other.racket"
                                }
                            },
                            "end": "\\]",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.section.expression.end.racket"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "$self"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "special-forms": {
            "patterns": [
                {
                    "name": "meta.expression.racket",
                    "begin": "(\\(|\\[)\\s*((for\\*?(\/(lists?|vector|hash(eq(v)?)?|fold|or|and|first|last|sum|product|((mutable|weak)\\-)?set(eq(v)?)?))?)|(let\\*?)|do)(?=[\\s\\{\\(\\[#])",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.section.expression.begin.racket"
                        },
                        "2": {
                            "name": "keyword.control.racket"
                        }
                    },
                    "end": "\\)|\\]",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.expression.end.racket"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#declaring-pattern"
                        },
                        {
                            "include": "#language-function"
                        },
                        {
                            "include": "#sexp"
                        },
                        {
                            "include": "#quote"
                        },
                        {
                            "include": "#quasiquote"
                        },
                        {
                            "include": "#atom"
                        },
                        {
                            "include": "#comment"
                        }
                    ]
                },
                {
                    "name": "meta.expression.racket",
                    "begin": "(\\(|\\[)\\s*(case)(?=[\\s\\{\\(\\[#])",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.section.expression.begin.racket"
                        },
                        "2": {
                            "name": "keyword.control.match.racket"
                        }
                    },
                    "end": "\\)|\\]",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.expression.end.racket"
                        }
                    },
                    "patterns": [
                        {
                            "name": "meta.case.pattern.racket",
                            "begin": "(\\[)\\s*(?=\\()",
                            "beginCaptures": {
                                "1": {
                                    "name": "punctuation.section.expression.begin.racket"
                                },
                                "2": {
                                    "name": "keyword.control.match.racket"
                                }
                            },
                            "end": "\\]",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.section.expression.end.racket"
                                }
                            },
                            "patterns": [
                                {
                                    "name": "meta.case.match.racket",
                                    "begin": "(?<=\\[)\\s*(?=(\\())",
                                    "end": "(?<=\\))",
                                    "patterns": [
                                        {
                                            "include": "#quoted-sexp"
                                        }
                                    ]
                                },
                                {
                                    "include": "$self"
                                }
                            ]
                        },
                        {
                            "name": "meta.expression.racket",
                            "begin": "(\\[)\\s*(else)",
                            "beginCaptures": {
                                "1": {
                                    "name": "punctuation.section.expression.begin.racket"
                                },
                                "2": {
                                    "name": "keyword.control.racket"
                                }
                            },
                            "end": "\\]",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.section.expression.end.racket"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "$self"
                                }
                            ]
                        },
                        {
                            "include": "#language-function"
                        },
                        {
                            "include": "#sexp"
                        },
                        {
                            "include": "#quote"
                        },
                        {
                            "include": "#quasiquote"
                        },
                        {
                            "include": "#atom"
                        },
                        {
                            "include": "#comment"
                        }
                    ]
                }
            ]
        },
        "function-call": {
            "patterns": [
                {
                    "begin": "(?<=\\(|\\[)\\s*(define-values)\\s*(\\(|\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.racket"
                        },
                        "2": {
                            "name": "punctuation.definition.variable.racket"
                        }
                    },
                    "end": "(?:\\)|\\])",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.variable.racket"
                        }
                    },
                    "patterns": [
                        {
                            "match": "[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+",
                            "name": "variable.other.racket"
                        }
                    ]
                },
                {
                    "match": "(?<=\\(|\\[)\\s*(define|define\/contract)\\s+([^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+)",
                    "captures": {
                        "1": {
                            "name": "storage.type.racket"
                        },
                        "2": {
                            "name": "variable.other.racket"
                        }
                    }
                },
                {
                    "begin": "(?<=\\(|\\[)\\s*(define|define\/public)\\s*(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.racket"
                        },
                        "2": {
                            "name": "punctuation.definition.function.racket"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.function.racket"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#function-parameters"
                        }
                    ]
                },
                {
                    "begin": "(?<=\\(|\\[)\\s*(struct)\\s+([^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+\\s+)?([^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+)\\s*(\\(|\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.racket"
                        },
                        "3": {
                            "name": "entity.name.type.racket"
                        },
                        "4": {
                            "name": "punctuation.definition.struct.racket"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.struct.racket"
                        }
                    },
                    "patterns": [
                        {
                            "match": "[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+",
                            "name": "variable.other.member.racket"
                        },
                        {
                            "begin": "\\[",
                            "end": "\\]",
                            "captures": {
                                "0": {
                                    "name": "punctuation.definition.function.arguments.racket"
                                }
                            },
                            "patterns": [
                                {
                                    "name": "variable.other.member.racket",
                                    "match": "(?<=\\[)[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+"
                                },
                                {
                                    "include": "#keyword"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=\\(|\\[)\\s*(format|f?printf)\\s*(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.racket"
                        },
                        "2": {
                            "name": "punctuation.string.begin.racket"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.string.end.racket"
                        }
                    },
                    "contentName": "string.quoted.double.racket",
                    "patterns": [
                        {
                            "name": "constant.other.placeholder.racket",
                            "match": "~[aAnNxXoObBeE%~\\s]"
                        },
                        {
                            "name": "constant.other.placeholder.racket",
                            "match": "~.[aAsSvV]"
                        },
                        {
                            "include": "#escaped-char"
                        }
                    ]
                },
                {
                    "match": "(?<=\\(|\\[)\\s*([^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+)",
                    "captures": {
                        "1": {
                            "name": "variable.function.racket"
                        }
                    }
                }
            ]
        },
        "function-parameters": {
            "patterns": [
                {
                    "match": "(?<=\\(|\\[)\\s*([^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+)",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.racket"
                        }
                    }
                },
                {
                    "match": "[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+",
                    "name": "variable.parameter.racket"
                },
                {
                    "include": "#keyword"
                },
                {
                    "begin": "\\[",
                    "end": "\\]",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.function.arguments.racket"
                        }
                    },
                    "patterns": [
                        {
                            "name": "variable.parameter.racket",
                            "match": "(?<=\\[)[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "language-function": {
            "patterns": [
                {
                    "match": "(?<=\\s|\\(|\\[)\\s*([+\\-*\/])(?=[\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.arithmetic.racket"
                        }
                    }
                },
                {
                    "match": "(?<=\\s|\\(|\\[)\\s*(or|and|not)(?=[\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.word.racket"
                        }
                    }
                },
                {
                    "match": "(?<=\\s|\\(|\\[)\\s*(cond|if)(?=[\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "keyword.control.conditional.racket"
                        }
                    }
                },
                {
                    "match": "(?<=\\s|\\(|\\[)\\s*(case|match)(?=[\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "keyword.control.match.racket"
                        }
                    }
                },
                {
                    "match": "(?<=\\s|\\(|\\[)\\s*(require|provide)(?=[\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "keyword.control.import-export.racket"
                        }
                    }
                },
                {
                    "match": "(?<=\\s|\\(|\\[)\\s*(set!|set-values!)(?=[\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "keyword.control.assignment.racket"
                        }
                    }
                }
            ]
        },
        "atom": {
            "patterns": [
                {
                    "include": "#string"
                },
                {
                    "include": "#quote"
                },
                {
                    "include": "#quasiquote"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#keyword"
                }
            ]
        },
        "constant": {
            "patterns": [
                {
                    "match": "#[tTfF]",
                    "name": "constant.language.racket"
                },
                {
                    "match": "(?<![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])(-?\\d+(\\.\\d+)?[+-]\\d+(\\.\\d+)?i)(?![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.complex.racket"
                        }
                    }
                },
                {
                    "match": "(?<![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])(-?\\d+\\.\\d+)(?![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.float.racket"
                        }
                    }
                },
                {
                    "match": "(?<![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])(-?\\d+)(?![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.integer.racket"
                        }
                    }
                },
                {
                    "match": "(?:\\b)((inf\\.0)|(inf\\.f)|(nan\\.0)|(nan\\.f))(?:\\b)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.other.racket"
                        }
                    }
                },
                {
                    "match": "(?<![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])(#\\\\\\w+)",
                    "captures": {
                        "1": {
                            "name": "constant.character.racket"
                        }
                    }
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.racket",
                    "match": "(;).*$",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment"
                        }
                    }
                },
                {
                    "name": "comment.sexp.racket",
                    "contentName": "meta.toc-list",
                    "begin": "(#;)\\s*(?=\\(|\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "end": "(?<=\\))",
                    "patterns": [
                        {
                            "include": "#parentheses"
                        }
                    ]
                },
                {
                    "name": "comment.sexp.racket",
                    "contentName": "meta.toc-list",
                    "begin": "#;",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "end": "(?=\\s|\\]|\\))",
                    "patterns": [
                        {
                            "include": "#parentheses"
                        }
                    ]
                },
                {
                    "name": "comment.block.racket",
                    "begin": "#\\|",
                    "end": "\\|#",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        }
                    ]
                }
            ]
        },
        "keyword": {
            "match": "(?<![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])(#:[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+)",
            "name": "keyword.other.racket"
        },
        "string": {
            "patterns": [
                {
                    "name": "string.regexp.racket",
                    "begin": "#(r|p)x\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.racket"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.racket"
                        }
                    }
                },
                {
                    "name": "string.quoted.double.byte.racket",
                    "begin": "#\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.racket"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.racket"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#escaped-char"
                        }
                    ]
                },
                {
                    "name": "string.quoted.double.racket",
                    "begin": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.racket"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.racket"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#escaped-char"
                        }
                    ]
                }
            ]
        },
        "quote": {
            "patterns": [
                {
                    "begin": "(')(?=[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.function.racket"
                        }
                    },
                    "end": "(?![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "patterns": [
                        {
                            "include": "#symbol"
                        }
                    ]
                },
                {
                    "begin": "(')(?=\\(|\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.function.racket"
                        }
                    },
                    "end": "(?<=\\)|\\])",
                    "patterns": [
                        {
                            "include": "#quoted-sexp"
                        }
                    ]
                }
            ]
        },
        "symbol": {
            "name": "string.quoted.single.racket",
            "match": "#?\\\\?[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]+"
        },
        "quasiquote": {
            "patterns": [
                {
                    "begin": "(`)(?=[^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.function.racket"
                        }
                    },
                    "end": "(?![^\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;])",
                    "patterns": [
                        {
                            "include": "#symbol"
                        }
                    ]
                },
                {
                    "begin": "(`)(?=\\(|\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.function.racket"
                        }
                    },
                    "end": "(?<=\\)|\\])",
                    "patterns": [
                        {
                            "include": "#quasiquoted-sexp"
                        }
                    ]
                }
            ]
        },
        "unquote": {
            "patterns": [
                {
                    "begin": "(,@?(?=[\\(\\[]))|((?=[\\(\\[]unquote[\\s\\{\\}\\(\\)\\[\\]\\|,\"'´\\\\;]))|((?=[\\(\\[]unquote-splicing[\\s\\{\\}\\(\\)\\[\\]#\\|,\"'´\\\\;]))",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.function.racket"
                        }
                    },
                    "end": "(?<=[\\)\\]])",
                    "name": "meta.unquoted.racket",
                    "patterns": [
                        {
                            "include": "#sexp"
                        }
                    ]
                },
                {
                    "begin": "(,@?)(?=[^\\s\\{\\}\\(\\)\\[\\]\\|,\"'´\\\\;])",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.function.racket"
                        }
                    },
                    "end": "(?![^\\s\\{\\}\\(\\)\\[\\]\\|,\"'´\\\\;])",
                    "patterns": [
                        {
                            "include": "#atom"
                        }
                    ]
                }
            ]
        },
        "escaped-char": {
            "name": "constant.character.escape.untitled.racket",
            "match": "\\\\([abfnrtv'\"\\\\?]|\\d{1,3}|x\\d{2})"
        },
        "parentheses": {
            "begin": "\\(",
            "end": "\\)",
            "patterns": [
                {
                    "include": "#parentheses"
                }
            ]
        }
    }
}